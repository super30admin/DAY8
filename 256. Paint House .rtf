{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;}
{\*\expandedcolortbl;;\cssrgb\c12941\c12941\c12941;}
\margl1440\margr1440\vieww28600\viewh15280\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
class Solution:\
    def minCost(self, costs: List[List[int]]) -> int:\
        \
        if len(costs) == 0 or not costs:\
            return 0\
        \
        n = len(costs)\
        \
        costR = costs[0][0]\
        costB = costs[0][1]\
        costG = costs[0][2]\
        \
        for i in range(1, n):\
            temp1 = costR\
            costR = costs[i][0] + min(costB, costG)\
            temp2 = costB\
            costB = costs[i][1] + min(temp1, costG)\
            costG = costs[i][2] + min(temp2, temp1)\
            \
        return min(costR, costB, costG)\
}