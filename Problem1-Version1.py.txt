# Time Complexity : O(n)
# Space Complexity : O(n)
# Did this code successfully run on LeetCode : Yes
# Any problem you faced while coding this : No

class Solution:
    def minCost(self, costs: List[List[int]]) -> int:
        
        dp = [[0 for _ in range(3)] for _ in range(len(costs)+1)]
        
        for i in range(1, len(dp)):
            for j in range(len(dp[0])):
                minValue = float("inf")
                for k in range(3):
                    if k != j:
                        minValue = min(minValue, costs[i-1][k] + dp[i-1][k])
                dp[i][j] = minValue
        
        return min(dp[-1][:])