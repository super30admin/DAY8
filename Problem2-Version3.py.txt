# Time Complexity : O(n*m), n is the number of distinct coin denominations and m is the amount required
# Space Complexity : O(m)
# Did this code successfully run on LeetCode : Yes
# Any problem you faced while coding this : No

class Solution:
    def change(self, amount: int, coins: List[int]) -> int:
        
        dp = [0] * (amount+1)
        dp[0] = 1
                    
        for i in range(len(coins)):
            for j in range(len(dp)):
                if coins[i] <= j:
                    dp[j] = dp[j-coins[i]] + dp[j]
                    
        return dp[-1]